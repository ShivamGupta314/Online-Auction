import fs from 'fs';
import path from 'path';

/**
 * Script to create simple placeholder images for product categories
 */

// Category structure
const categories = {
  'electronics': ['laptop', 'smartphone', 'headphones', 'tablet', 'camera'],
  'fashion': ['jacket', 'shoes', 'watch', 'sunglasses', 'bag'],
  'home': ['sofa', 'table', 'lamp', 'chair', 'rug'],
  'art': ['painting', 'sculpture', 'print', 'photograph', 'pottery'],
  'default': ['item1', 'item2', 'item3', 'item4', 'item5']
};

// Create directory structure
function createDirectories() {
  console.log('Creating directory structure...');
  
  // Base uploads path
  const uploadsBase = path.join(process.cwd(), 'uploads');
  if (!fs.existsSync(uploadsBase)) {
    fs.mkdirSync(uploadsBase, { recursive: true });
  }
  
  // Products directory
  const productsDir = path.join(uploadsBase, 'images', 'products');
  if (!fs.existsSync(productsDir)) {
    fs.mkdirSync(productsDir, { recursive: true });
  }
  
  // Category directories
  for (const category in categories) {
    const categoryDir = path.join(productsDir, category);
    if (!fs.existsSync(categoryDir)) {
      fs.mkdirSync(categoryDir, { recursive: true });
    }
  }
  
  console.log('Directory structure created successfully.');
}

// Create a simple 1px placeholder image
function createPlaceholderImage(category, item) {
  // This is a minimal 1x1 pixel JPG image data
  const minimalJpg = Buffer.from([
    0xff, 0xd8, 0xff, 0xe0, 0x00, 0x10, 0x4a, 0x46, 0x49, 0x46, 0x00, 0x01, 0x01, 0x01, 0x00, 0x48, 
    0x00, 0x48, 0x00, 0x00, 0xff, 0xdb, 0x00, 0x43, 0x00, 0x08, 0x06, 0x06, 0x07, 0x06, 0x05, 0x08, 
    0x07, 0x07, 0x07, 0x09, 0x09, 0x08, 0x0a, 0x0c, 0x14, 0x0d, 0x0c, 0x0b, 0x0b, 0x0c, 0x19, 0x12, 
    0x13, 0x0f, 0x14, 0x1d, 0x1a, 0x1f, 0x1e, 0x1d, 0x1a, 0x1c, 0x1c, 0x20, 0x24, 0x2e, 0x27, 0x20, 
    0x22, 0x2c, 0x23, 0x1c, 0x1c, 0x28, 0x37, 0x29, 0x2c, 0x30, 0x31, 0x34, 0x34, 0x34, 0x1f, 0x27, 
    0x39, 0x3d, 0x38, 0x32, 0x3c, 0x2e, 0x33, 0x34, 0x32, 0xff, 0xdb, 0x00, 0x43, 0x01, 0x09, 0x09, 
    0x09, 0x0c, 0x0b, 0x0c, 0x18, 0x0d, 0x0d, 0x18, 0x32, 0x21, 0x1c, 0x21, 0x32, 0x32, 0x32, 0x32, 
    0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 
    0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 
    0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0xff, 0xc0, 0x00, 
    0x11, 0x08, 0x00, 0x01, 0x00, 0x01, 0x03, 0x01, 0x22, 0x00, 0x02, 0x11, 0x01, 0x03, 0x11, 0x01, 
    0xff, 0xc4, 0x00, 0x15, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xff, 0xc4, 0x00, 0x14, 0x10, 0x01, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc4, 0x00, 
    0x14, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0xff, 0xc4, 0x00, 0x14, 0x11, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xda, 0x00, 0x0c, 0x03, 0x01, 0x00, 
    0x02, 0x11, 0x03, 0x11, 0x00, 0x3f, 0x00, 0xb2, 0xc0, 0x07, 0xff, 0xd9
  ]);
  
  // Define the save path
  const savePath = path.join(
    process.cwd(), 
    'uploads', 
    'images', 
    'products', 
    category, 
    `${item}.jpg`
  );
  
  // Skip if file already exists
  if (fs.existsSync(savePath)) {
    console.log(`File already exists: ${category}/${item}.jpg - Skipping`);
    return;
  }
  
  // Write the file
  fs.writeFileSync(savePath, minimalJpg);
  console.log(`Created: ${category}/${item}.jpg`);
}

// Main function to create all images
async function createAllImages() {
  try {
    // Create directory structure
    createDirectories();
    
    // Create images for each category
    for (const category in categories) {
      for (const item of categories[category]) {
        createPlaceholderImage(category, item);
      }
    }
    
    console.log('\nAll placeholder images created successfully!');
    console.log(`Total images: ${Object.values(categories).flat().length}`);
    
  } catch (error) {
    console.error('Error creating images:', error);
  }
}

// Execute the creation
createAllImages()
  .then(() => console.log('Image creation process completed.'))
  .catch(err => console.error('Fatal error:', err)); 